<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pomina.erpapp.appbaohanh.web.menu_permission.mapper.MasterMenuMapper">

    <resultMap id="masterMenuResultMap" type="com.pomina.erpapp.appbaohanh.web.menu_permission.entity.MasterMenu">
        <id column="master_menu_id" property="masterMenuId"/>
        <result column="master_menu_name" property="masterMenuName"/>
        <result column="path" property="path"/>
        <result column="icon" property="icon"/>
        <result column="is_parent" property="isParent"/>
        <result column="order_index" property="orderIndex"/>
        <result column="parent_id" property="parentId"/>
        <result column="status" property="status"/>
        <result column="noted" property="noted"/>
        <result column="created_at" property="createdAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

    <select id="findById" resultMap="masterMenuResultMap">
        SELECT master_menu_id,
               master_menu_name,
               path,
               icon,
               is_parent,
               order_index,
               parent_id,
               status,
               noted,
               created_at,
               created_by,
               updated_at,
               updated_by,
               is_deleted
        FROM master_menu
        WHERE master_menu_id = #{id}
          AND is_deleted = 0
    </select>

    <select id="findAll" resultMap="masterMenuResultMap">
        SELECT master_menu_id,
               master_menu_name,
               path,
               icon,
               is_parent,
               order_index,
               parent_id
        FROM master_menu
        WHERE is_deleted = 0
    </select>

    <select id="findAllPaged" resultMap="masterMenuResultMap">
        SELECT master_menu_id,
        master_menu_name,
        path,
        icon,
        is_parent,
        order_index,
        parent_id,
        status,
        noted,
        created_at,
        created_by,
        updated_at,
        updated_by,
        is_deleted
        FROM master_menu
        WHERE is_deleted = 0
        <if test="paging != null and paging.orderByClause != null">
            ORDER BY
            <choose>
                <when test="paging.orderByClause == 'master_menu_name'">master_menu_name</when>
                <when test="paging.orderByClause == 'created_at'">created_at</when>
                <otherwise>master_menu_id</otherwise>
            </choose>
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <insert id="insert">
        INSERT INTO master_menu (
        master_menu_name,
        path,
        icon,
        is_parent,
        order_index,
        parent_id
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.masterMenuName},
            #{item.path},
            #{item.icon},
            #{item.isParent},
            #{item.orderIndex},
            #{item.parentId}
            )
        </foreach>
    </insert>

    <!--    <update id="update">-->
    <!--        INSERT INTO master_menu (-->
    <!--                                 master_menu_id,-->
    <!--                                 master_menu_name,-->
    <!--                                 path,-->
    <!--                                 icon,-->
    <!--                                 is_parent,-->
    <!--                                 order_index,-->
    <!--                                 parent_id-->
    <!--        ) VALUES-->
    <!--        <foreach collection="list" item="menu" separator=",">-->
    <!--            (-->
    <!--            #{menu.masterMenuId},-->
    <!--            #{menu.masterMenuName},-->
    <!--            #{menu.path},-->
    <!--            #{menu.icon},-->
    <!--            #{menu.isParent},-->
    <!--            #{menu.orderIndex},-->
    <!--            #{menu.parentId}-->
    <!--            )-->
    <!--        </foreach>-->
    <!--        ON DUPLICATE KEY UPDATE-->
    <!--        master_menu_name = CASE-->
    <!--        WHEN VALUES(master_menu_name) IS NOT NULL AND VALUES(master_menu_name) != ''-->
    <!--        THEN VALUES(master_menu_name)-->
    <!--        ELSE master_menu_name END,-->
    <!--        path = CASE-->
    <!--        WHEN VALUES(path) IS NOT NULL AND VALUES(path) != ''-->
    <!--        THEN VALUES(path)-->
    <!--        ELSE path END,-->
    <!--        icon = CASE-->
    <!--        WHEN VALUES(icon) IS NOT NULL AND VALUES(icon) != ''-->
    <!--        THEN VALUES(icon)-->
    <!--        ELSE icon END,-->
    <!--        is_parent = COALESCE(VALUES(is_parent), is_parent),-->
    <!--        order_index = COALESCE(VALUES(order_index), order_index),-->
    <!--        parent_id = COALESCE(VALUES(parent_id), parent_id)-->
    <!--    </update>-->

    <update id="update">
        UPDATE master_menu
        <set>
            master_menu_name = CASE
            <foreach collection="list" item="menu">
                <if test="menu.masterMenuName != null and menu.masterMenuName != ''">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.masterMenuName}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE master_menu_name END,

            path = CASE
            <foreach collection="list" item="menu">
                <if test="menu.path != null and menu.path != ''">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.path}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE path END,

            icon = CASE
            <foreach collection="list" item="menu">
                <if test="menu.icon != null and menu.icon != ''">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.icon}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE icon END,

            is_parent = CASE
            <foreach collection="list" item="menu">
                <if test="menu.isParent != null">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.isParent}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE is_parent END,

            order_index = CASE
            <foreach collection="list" item="menu">
                <if test="menu.orderIndex != null">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.orderIndex}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE order_index END,

            parent_id = CASE
            <foreach collection="list" item="menu">
                <if test="menu.parentId != null">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.parentId}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE parent_id END,

            status = CASE
            <foreach collection="list" item="menu">
                <if test="menu.status != null">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.status}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE status END,

            noted = CASE
            <foreach collection="list" item="menu">
                <if test="menu.noted != null and menu.noted != ''">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.noted}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE noted END,

            updated_by = CASE
            <foreach collection="list" item="menu">
                <if test="menu.updatedBy != null">
                    WHEN master_menu_id = #{menu.masterMenuId} THEN #{menu.updatedBy}
                </if>
            </foreach>
            WHEN 1=0 THEN NULL
            ELSE updated_by END,

            updated_at = NOW()
        </set>
        WHERE master_menu_id IN
        <foreach collection="list" item="menu" open="(" separator="," close=")">
            #{menu.masterMenuId}
        </foreach>
        AND is_deleted = 0
    </update>

    <update id="softDelete">
        <if test="list != null and list.size() > 0">
            UPDATE master_menu
            SET is_deleted = 1
            WHERE master_menu_id IN
            <foreach collection="list" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </update>

    <delete id="deleteById">
        DELETE
        FROM master_menu
        WHERE master_menu_id = #{id}
    </delete>

    <select id="existsById" resultType="boolean">
        SELECT EXISTS(SELECT 1
                      FROM master_menu
                      WHERE master_menu_id = #{id}
                        AND is_deleted = 0)
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(master_menu_id)
        FROM master_menu
        WHERE is_deleted = 0
    </select>
</mapper>