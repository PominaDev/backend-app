<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pomina.erpapp.appbaohanh.product_warranty_activation.mapper.DistributorMapper">

    <resultMap id="DistributorResultMap"
               type="com.pomina.erpapp.appbaohanh.product_warranty_activation.entity.Distributor">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="status" property="status"/>
        <result column="noted" property="noted"/>
        <result column="create_at" property="createdAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="update_at" property="updatedAt"/>
        <result column="update_by" property="updatedBy"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

    <select id="findById" resultMap="DistributorResultMap">
        SELECT id,
               name,
               status,
               noted,
               created_at,
               created_by,
               updated_at,
               updated_by,
               is_deleted
        FROM distributor
        WHERE id = #{id}
          AND is_deleted = 0
    </select>

    <select id="findAll" resultMap="DistributorResultMap">
        SELECT id,
               name,
               status,
               noted,
               created_at,
               created_by,
               updated_at,
               updated_by,
               is_deleted
        FROM distributor
        WHERE is_deleted = 0
    </select>

    <select id="findAllPaged" resultMap="DistributorResultMap">
        SELECT id,
        name,
        status,
        noted,
        created_at,
        created_by,
        updated_at,
        updated_by,
        is_deleted
        FROM distributor
        WHERE is_deleted = 0
        <if test="paging != null and paging.orderByClause != null">
            ORDER BY ${paging.orderByClause}
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <insert id="insert">
        INSERT INTO distributor(name, status, noted, created_by, updated_by)
        VALUES (#{name}, #{status}, #{noted}, #{createdBy}, #{updatedBy})
    </insert>

    <update id="update">
        UPDATE distributor
        SET name       = #{name},
            status     = #{status},
            noted       = #{noted},
            updated_by = #{updatedBy}
        WHERE id = #{id}
          AND is_deleted = 0
    </update>

    <delete id="deleteById">
        DELETE
        FROM distributor
        WHERE id = #{id}
    </delete>

    <update id="softDeleteById">
        UPDATE distributor
        SET is_deleted = 1
        WHERE id = #{id}
    </update>

    <select id="existsById" resultType="boolean">
        SELECT EXISTS(SELECT 1
                      FROM distributor
                      WHERE id = #{id}
                        AND is_deleted = 0)
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(id)
        FROM distributor
        WHERE is_deleted = 0
    </select>

</mapper>