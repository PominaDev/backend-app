<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pomina.webapp.grant_approval.mapper.MasterGroupUserMapper">

    <resultMap id="masterGroupUserResultMap"
               type="com.pomina.webapp.grant_approval.entity.MasterGroupUser">

        <id column="master_group_user_id" property="masterGroupUserId"/>
        <result column="master_group_user_code" property="masterGroupUserCode"/>
        <result column="master_group_user_name" property="masterGroupUserName"/>
        <result column="master_group_user_role" property="masterGroupUserRole"/>
        <result column="master_group_user_order" property="masterGroupUserOrder"/>
        <result column="master_group_user_description" property="masterGroupUserDescription"/>
        <result column="user_id" property="userId"/>

        <result column="status" property="status"/>
        <result column="noted" property="note"/>
        <result column="created_at" property="createdAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

    <select id="findById" resultMap="masterGroupUserResultMap">
        SELECT master_group_user_id
             , master_group_user_code
             , master_group_user_name
             , master_group_user_role
             , master_group_user_order
             , master_group_user_description
             , user_id
             , status
             , noted
             , created_at
             , created_by
             , updated_at
             , updated_by
             , is_deleted
        FROM master_group_user
        WHERE master_group_user_id = #{id}
          AND is_deleted = 0
    </select>


    <select id="findAll" resultMap="masterGroupUserResultMap">
        SELECT  master_group_user_id
             , master_group_user_code
             , master_group_user_name
             , master_group_user_role
             , master_group_user_order
             , master_group_user_description
             , user_id
             , status
             , noted
             , created_at
             , created_by
             , updated_at
             , updated_by
             , is_deleted
        FROM master_group_user
        WHERE is_deleted = 0
        ORDER BY master_group_user_code
    </select>

    <select id="findAllPaged" resultMap="masterGroupUserResultMap">
        SELECT master_group_user_id
        , master_group_user_code
        , master_group_user_name
        , master_group_user_role
        , master_group_user_order
        , master_group_user_description
        , user_id
        , status
        , noted
        , created_at
        , created_by
        , updated_at
        , updated_by
        , is_deleted
        FROM master_group_user
        WHERE is_deleted = 0
        <if test="paging != null and paging.orderByClause != null">
            ORDER BY ${paging.orderByClause}
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByMasterGroupUserCode" resultMap="masterGroupUserResultMap">
        SELECT  master_group_user_id
             , master_group_user_code
             , master_group_user_name
             , master_group_user_role
             , master_group_user_order
             , master_group_user_description
             , user_id
             , status
             , noted
             , created_at
             , created_by
             , updated_at
             , updated_by
             , is_deleted
        FROM master_group_user
        WHERE master_group_user_code = #{groupCode}
           AND is_deleted = 0

    </select>

    <insert id="insert" useGeneratedKeys="true">
        INSERT INTO master_group_user (
                master_group_user_code
              , master_group_user_name
              , master_group_user_role
              , master_group_user_order
              , master_group_user_description
              , user_id
        ) VALUES (
               #{masterGroupUserCode}
             , #{masterGroupUserName}
             , #{masterGroupUserRole}
             ,#{masterGroupUserOrder}
             ,#{masterGroupUserDescription}
             ,#{userId}
        )
    </insert>

    <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="true">
        INSERT INTO master_group_user (
        master_group_user_code,
        master_group_user_name,
        master_group_user_role,
        master_group_user_order,
        master_group_user_description,
        user_id,
        noted
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.masterGroupUserCode},
            #{item.masterGroupUserName},
            #{item.masterGroupUserRole},
            #{item.masterGroupUserOrder},
            #{item.masterGroupUserDescription},
            #{item.userId},
            #{item.note}
            )
        </foreach>
    </insert>

    <update id="update">
        UPDATE master_group_user
        <set>
            <if test="masterGroupUserCode != null and masterGroupUserCode != ''">
               , master_group_user_code = #{masterGroupUserCode}
            </if>
            <if test="masterGroupUserName != null and masterGroupUserName != ''">
               , master_group_user_name = #{masterGroupUserName}
            </if>
            <if test="masterGroupUserRole != null and masterGroupUserRole != ''">
              ,  master_group_user_role = #{masterGroupUserRole}
            </if>
            <if test="masterGroupUserOrder != null and masterGroupUserOrder != ''">
               , master_group_user_order = #{masterGroupUserOrder}
            </if>
            <if test="masterGroupUserDescription != null and masterGroupUserDescription != ''">
               , master_group_user_description = #{masterGroupUserDescription}
            </if>
            <if test="userId != null and userId != ''">
               , user_id = #{userId}
            </if>
            <if test="note != null and note != ''">
               , noted = #{note}
            </if>
        </set>
        WHERE master_group_user_id = #{masterGroupUserId}
            AND is_deleted = 0
    </update>

    <update id="updateList" parameterType="java.util.List">
        <foreach collection="list" item="item">
            UPDATE master_group_user
            <set>
                <if test="item.masterGroupUserCode != null and item.masterGroupUserCode != ''">
                    master_group_user_code = #{item.masterGroupUserCode}
                </if>
                <if test="item.masterGroupUserName != null and item.masterGroupUserName != ''">
                    , master_group_user_name = #{item.masterGroupUserName}
                </if>
                <if test="item.masterGroupUserRole != null and item.masterGroupUserRole != ''">
                    , master_group_user_role = #{item.masterGroupUserRole}
                </if>
                <if test="item.masterGroupUserOrder != null and item.masterGroupUserOrder != ''">
                    , master_group_user_order = #{item.masterGroupUserOrder}
                </if>
                <if test="item.masterGroupUserDescription != null and item.masterGroupUserDescription != ''">
                    , master_group_user_description = #{item.masterGroupUserDescription}
                </if>
                <if test="item.userId != null and item.userId != ''">
                    , user_id = #{item.userId}
                </if>
                <if test="item.note != null and item.note != ''">
                    , noted = #{item.note}
                </if>
            </set>
            WHERE master_group_user_id = #{item.masterGroupUserId}
            AND is_deleted = 0
        </foreach>
    </update>

    <delete id="deleteById">
        DELETE
        FROM master_group_user
        WHERE master_group_user_id = #{id}
    </delete>

    <update id="softDeleteList">
        <if test="list != null and list.size() > 0">
            UPDATE master_group_user
            SET is_deleted = 1
            WHERE master_group_user_id IN
            <foreach collection="list" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </update>

    <update id="softDeleteById">
        UPDATE master_group_user
        SET is_deleted = 1
        WHERE master_group_user_id = #{id}
    </update>

    <select id="existsById">
        SELECT EXISTS(SELECT 1
                      FROM master_group_user
                      WHERE master_group_user_id = #{id}
                        AND is_deleted = 0)
    </select>

    <select id="isExistByUserIdAndGroupCode" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1
                      FROM master_group_user
                      WHERE master_group_user_code = #{groupCode}
                        AND user_id = #{userId}
                        AND is_deleted = 0)
    </select>

    <select id="countAll">
        SELECT COUNT(master_group_user_id)
        FROM master_group_user
        WHERE is_deleted = 0
    </select>

    <select id="findOrderOneUsersByGroupCode" resultMap="masterGroupUserResultMap">
        SELECT
            user_id,
            master_group_user_code,
            master_group_user_order,
            master_group_user_name
        FROM master_group_user
        WHERE master_group_user_code = #{groupCode}
          AND master_group_user_order = 1
    </select>





</mapper>
